import requests
from bs4 import BeautifulSoup
import csv
import openai





    # Function to scrape Letterboxd data (similar to your previous code)



def scrape_letterboxd(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    movie_containers = soup.find_all('li', class_='film-detail')
    movie_data = []

    for container in movie_containers:
        title = container.find('h2').text.strip()
        rating = container.find('span', class_='rating').text.strip()

        # Use conditional check to handle missing 'year' element
        year = container.find('small').text.strip()

        # Use conditional check to handle missing 'review-text' element
        review_element = container.find('div', class_='review-text')
        review = review_element.text.strip() if review_element else "N/A"

        movie_data.append({
            'Title': title,
            'Year': year,
            'Rating': rating,
            'Review': review
        })

    return movie_data



def generate_description(movie_data):
    # Combine all the movie ratings into a single string
    ratings_text = "\n".join(f"â€¢ {movie['Title']}: {movie['Rating']}" for movie in movie_data)
    num_movies = len(movie_data)

    # Provide the collected movie ratings to ChatGPT for analysis
    # Replace 'YOUR_CHATGPT_API_KEY' with your actual OpenAI API key
    openai.api_key = 'API KEY'
    prompt = f"User has reviewed {num_movies} movies and given the following ratings:\n{ratings_text}\nBased on the movie ratings, please provide insights on the user's movie preferences:"

    # Generate the description using ChatGPT
    response = openai.Completion.create(
        engine="text-davinci-002",
        prompt=prompt,
        temperature=0.7,
        max_tokens=300
    )

    return response.choices[0].text.strip()


if __name__ == "__main__":
    username = 'username'
    url = f'https://letterboxd.com/{username}/films/reviews/'

    movie_data = scrape_letterboxd(url)

    with open('letterboxd_movies.csv', mode='w', encoding='utf-8', newline='') as file:
        fieldnames = ['Title', 'Year', 'Rating', 'Review']
        writer = csv.DictWriter(file, fieldnames=fieldnames)
        writer.writeheader()
        writer.writerows(movie_data)

    print("Data scraped and saved successfully.")

    # Analyze the movie data (based on ratings) and generate a detailed description
    description = generate_description(movie_data)
    print("\nPerson's Movie Preferences Description:")
    print(description)
